name: CI

on:
  workflow_dispatch: {}
  push:

jobs:
  build:
    name: 'Static Checks'
    runs-on: 'ubuntu-24.04'

    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2

  test:
    name: Test (${{ matrix.node }})
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-24.04'
        node:
          # should include even numbers >= 12
          # see: https://nodejs.org/en/about/previous-releases
          - '22'
          - '20'
          - '18'
          - '16'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Print Node.js version
        run: node -v

      - name: Npm install
        run: npm install

      - name: Test
        run: npm run test
        env:
          TWIKEY_API_KEY: ${{ secrets.TWIKEY_API_KEY }}
          CT: ${{ secrets.CT }}
          MNDTNUMBER: ${{ secrets.MNDTNUMBER }}

  publish:
    name: Publish
    if: >-
      (github.event_name == 'workflow_dispatch' || github.event_name == 'push') && startsWith(github.ref, 'refs/tags/v')
    needs: [build, test]
    runs-on: 'ubuntu-24.04'
    steps:
      # just is called in `yarn prepack`, which is called during the `publish` operation
      - uses: extractions/setup-just@v2
      - uses: actions/checkout@v2
      - run: sudo apt-get install -y oathtool
      - name: Publish to NPM
        run: |
          set +ex
          npm config set //registry.npmjs.org/:_authToken $NPM_AUTH_TOKEN
          # print the NPM user name for validation
          npm whoami
          VERSION=$(node -p "require('./package.json').version" )
          # Only publish stable versions to the latest tag
          if [[ "$VERSION" =~ ^[^-]+$ ]]; then
            NPM_TAG="latest"
          else
            NPM_TAG="beta"
          fi
          echo "Publishing $VERSION with $NPM_TAG tag."
          npm publish --otp="$(oathtool -b --totp $NPM_OTP)" --tag $NPM_TAG
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}